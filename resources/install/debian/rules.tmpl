#!/usr/bin/make -f

include /usr/share/dpkg/architecture.mk

export JAVA_HOME=/usr/lib/jvm/default-java
export PACKAGE_NAME=_PACKAGE_NAME_
export ANT=ant

ifeq ($(DEB_HOST_ARCH),amd64)
export USR_LIB_FOLDER=/usr/lib/x86_64-linux-gnu
else
export USR_LIB_FOLDER=/usr/lib/i386-linux-gnu
endif

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

libjitsiVersion = $(shell dpkg -s libjitsi | grep Version: | awk '{print $$2}')

%:
	dh $@ --with javahelper

override_dh_auto_build:
	dh_auto_build -- _BUILD_TARGET_

# Copy OS specific and native libs
override_dh_install-indep:
	dh_install -p$(PACKAGE_NAME) -Xslickless.jar -Xslick-runner.jar -X-slick.jar -X.svn -Xcommons-codec.jar -Xcommons-lang.jar
# make and install the debian specific bundles
# use the prebuild and installed bundles to extract/modify and use the
# exising debian java packages
	$(ANT) -file build.xml -Ddebian.bundles.dest=debian/$(PACKAGE_NAME)/usr/share/$(PACKAGE_NAME)/sc-bundles -Ddebian.bundles.common.dest=debian/$(PACKAGE_NAME)-common/usr/share/$(PACKAGE_NAME)-common deb-bundle-jna deb-bundle-util deb-bundle-sysactivitynotifications deb-bundle-swing-ui deb-bundle-json deb-bundle-smacklib deb-bundle-jmdnslib deb-bundle-desktoputil deb-bundle-bouncycastle deb-bundle-plugin-accountinfo deb-bundle-commons-lang deb-bundle-hsqldb deb-libjitsi-deps deb-bundle-httpmime deb-bundle-common deb-bundle-slf4j

override_dh_install-arch:
ifeq ($(DEB_HOST_ARCH),amd64)
	dh_install -p$(PACKAGE_NAME)-jni lib/native/linux-64/*.so usr/lib/jni/
else
	dh_install -p$(PACKAGE_NAME)-jni lib/native/linux/*.so usr/lib/jni/
endif
	test -e $(USR_LIB_FOLDER)/libavformat-ffmpeg.so.56 && dh_link $(USR_LIB_FOLDER)/libavformat-ffmpeg.so.56 usr/lib/jni/libavformat.so || true
	test -e $(USR_LIB_FOLDER)/libavcodec-ffmpeg.so.56 && dh_link $(USR_LIB_FOLDER)/libavcodec-ffmpeg.so.56 usr/lib/jni/libavcodec.so || true
	test -e $(USR_LIB_FOLDER)/libavfilter-ffmpeg.so.5 && dh_link $(USR_LIB_FOLDER)/libavfilter-ffmpeg.so.5 usr/lib/jni/libavfilter.so || true
	test -e $(USR_LIB_FOLDER)/libavutil-ffmpeg.so.54 && dh_link $(USR_LIB_FOLDER)/libavutil-ffmpeg.so.54 usr/lib/jni/libavutil.so || true
	test -e $(USR_LIB_FOLDER)/libswscale-ffmpeg.so.3 && dh_link $(USR_LIB_FOLDER)/libswscale-ffmpeg.so.3 usr/lib/jni/libswscale.so || true
	test -e $(USR_LIB_FOLDER)/libavformat.so.57 && dh_link $(USR_LIB_FOLDER)/libavformat.so.57 usr/lib/jni/libavformat.so || true
	test -e $(USR_LIB_FOLDER)/libavcodec.so.57 && dh_link $(USR_LIB_FOLDER)/libavcodec.so.57 usr/lib/jni/libavcodec.so || true
	test -e $(USR_LIB_FOLDER)/libavfilter.so.6 && dh_link $(USR_LIB_FOLDER)/libavfilter.so.6 usr/lib/jni/libavfilter.so || true
	test -e $(USR_LIB_FOLDER)/libavutil.so.55 && dh_link $(USR_LIB_FOLDER)/libavutil.so.55 usr/lib/jni/libavutil.so || true
	test -e $(USR_LIB_FOLDER)/libswscale.so.4 && dh_link $(USR_LIB_FOLDER)/libswscale.so.4 usr/lib/jni/libswscale.so || true

# we have folders with name *.jar which jh_manifest don't like and fails,
# we do not use it so skip it
override_jh_manifest:
	# do nothing

override_dh_auto_clean:
	dh_auto_clean -- clean-debuild

override_dh_gencontrol:
	dh_gencontrol -- -Vlibjitsi:version="$(libjitsiVersion)"

get-orig-source:
	uscan
